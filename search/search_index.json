{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"about/","title":"a place to document my studies.","text":""},{"location":"tags/","title":"Tags","text":""},{"location":"homl/","title":"Hands-On Machine Learning (HOML) Notes","text":""},{"location":"homl/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Overview</li> <li>Chapter 1: The Machine Learning Landscape</li> <li>Chapter 2: End-to-End Machine Learning Project</li> </ul> <p>Welcome to my study notes and code summaries for the book \"Hands-On Machine Learning\".</p> <ul> <li>Overview</li> <li>Chapter 1: The Machine Learning Landscape</li> <li>Chapter 2: End-to-End Machine Learning Project</li> <li>[More chapters coming soon!]</li> </ul> <p>Each chapter includes: - Key concepts and summaries - Code snippets and explanations - Links to Jupyter notebooks (if available)</p>"},{"location":"homl/chapter1/","title":"Chapter 1: The Machine Learning Landscape","text":""},{"location":"homl/chapter1/#key-concepts","title":"Key Concepts","text":"<ul> <li>Definition of Machine Learning</li> <li>Types of ML systems</li> <li>Types Of Sets</li> <li>Main challenges</li> </ul>"},{"location":"homl/chapter1/#code-examples","title":"Code Examples","text":"<pre><code># Example: Simple linear regression with Scikit-Learn\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nfrom sklearn.neighbors import KNeighborsRegressor\n# Download and prepare the data\ndata_root = \"https://github.com/ageron/data/raw/main/\"\nlifesat = pd.read_csv(data_root + \"lifesat/lifesat.csv\")\n\nX = lifesat[[\"GDP per capita (USD)\"]].values\ny = lifesat[[\"Life satisfaction\"]].values\n# Visualize the data\nlifesat.plot(kind='scatter', grid=True,\nx=\"GDP per capita (USD)\", y=\"Life satisfaction\")\nfor i, row in lifesat.iterrows():\n    plt.text(row[\"GDP per capita (USD)\"], row[\"Life satisfaction\"], row[\"Country\"], fontsize=8, alpha=0.7)\nplt.axis([23_500, 62_500, 4, 9])\nplt.show()\n# Select a linear model\n\nmodel = KNeighborsRegressor(n_neighbors=3)\n# Train the model\nmodel.fit(X, y)\n# Make a prediction for Cyprus\nX_new = [[37_655.2]] # Cyprus' GDP per capita in 2020\nprint(model.predict(X_new)) # output: [[6.30165767]]\n</code></pre>"},{"location":"homl/chapter1/#notes","title":"Notes","text":"<ul> <li>Add your own notes and insights here.</li> </ul>"},{"location":"homl/chapter2/","title":"Chapter 2: End-to-End Machine Learning Project","text":""},{"location":"homl/chapter2/#key-concepts","title":"Key Concepts","text":"<ul> <li>Project workflow</li> <li>Data preparation</li> <li>Model selection and evaluation</li> </ul>"},{"location":"homl/chapter2/#code-examples","title":"Code Examples","text":"<pre><code># Example: Data splitting with Scikit-Learn\nfrom sklearn.model_selection import train_test_split\nimport numpy as np\nX = np.arange(10).reshape((5, 2))\ny = np.array([0, 1, 0, 1, 0])\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\nprint(X_train, X_test)\n</code></pre>"},{"location":"homl/chapter2/#notes","title":"Notes","text":"<ul> <li>Add your own notes and insights here.</li> </ul>"},{"location":"homl/overview/","title":"My Machine Learning Journey","text":"<p>My main goal is to gain a deep understanding of machine learning algorithms and to be able to implement them easily in every project I work on.</p> <ul> <li>Why study machine learning?</li> </ul> Answer <ul> <li>What are the main topics covered?</li> </ul> Answer <ul> <li>How will I apply these concepts?</li> </ul> Answer <ul> <li>What are the main topics covered?</li> <li>How will I apply these concepts?</li> </ul> <p>Most of the code I will use and the info given is all redited to \u201cHands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow by Aur\u00e9lien G\u00e9ron. Copyright 2023 Aur\u00e9lien G\u00e9ron, 978-1-098-12597-4.\u201d.</p>"},{"location":"homl/train/","title":"Type of Sets","text":"<p>Training Set: The training set is a subset of data used to fit and train a machine learning model. It may be labled or not depend on the type of learning used.  - Holds approximately 60\u201380% of the data - Represents the general problem being addressed - Can be noisier than other sets  </p> <p>Train-dev set: The dev set is an extra tool to see if the training set hit the mark. If the model preformence is poor then it must have overfitted the training set. if it preforms well on the train-dev we cant try evalute it on the dev set. </p> <p>Dev set(validation): This is the set used during develompent to choose the best model or hpyerparameters we want to use and it give an estamation of how well will the model work on unseen but representive data.</p>"}]}